openapi: 3.0.0
info:
  title: OpenAPI спецификация Шаблонизатора документов WORD
  license:
    name: Apache 2.0
    url: https://www.apache.org/licenses/LICENSE-2.0.html
  version: 0.0.1
servers:
  - url: http://localhost:8080/api/v1/
    description: Dev server  
  
paths:
  /templates:
    get:
      summary: Метод получения шаблонов
      description: Метод предназначен для получения списка всех шаблонов, сохраненных в БД.
      operationId: getTemplates
      tags:
        - Template
      responses:
        '200':
          "description": Список шаблонов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Templates"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Метод добавления нового шаблона в каталог
      description: Метод предназначен для сохранения в БД данных по нового шаблона.
      operationId: createTemplate
      tags:
        - Template
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Template"
      responses:
        '200':
          "description": Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        '400':
          "description": Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /templates/{id}:
    get:
      summary: Метод получения шаблона по идентификатору
      operationId: getTemplateById
      tags:
        - Template
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор шаблона
          schema:
            type: string
      responses:
        '200':
          "description": Шаблон
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Метод обновления шаблона и в каталоге
      description: Метод предназначен для обновления в БД данных по имеющейся шаблона.
      operationId: updateTemplate
      tags:
        - Template
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор шаблона
          schema:
            type: string
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Template"
      responses:
        '200':
          "description": Подтверждение успешного обновления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Template"
        '400':
          "description": Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Метод удаления шаблона по идентификатору
      operationId: deleteTemplatyById
      tags:
        - Template
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор игрушки
          schema:
            type: string
      responses:
        '200':
          "description": Успешное удаление
          content:
            'application/json': {}
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


/docs:
    get:
      summary: Метод получение  готовый документов
      description: Метод предназначен для получения списка готовых документов, сохраненных в БД.
      operationId: getDocs
      tags:
        - Doc
      responses:
        '200':
          "description": Список шаблонов
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doc"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    post:
      summary: Метод добавления нового готового\черновика документа в каталог
      description: Метод предназначен для сохранения в БД данных по нового готового\черновика документа.
      operationId: createTemplate
      tags:
        - Template
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Doc"
      responses:
        '200':
          "description": Подтверждение успешного сохранения
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doc"
        '400':
          "description": Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  /Doc/{id}:
    get:
      summary: Метод получения готового\черновика документа по идентификатору
      operationId: getDoceById
      tags:
        - Doc
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор готового\черновика документа
          schema:
            type: string
      responses:
        '200':
          "description": Готового\черновика документа
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doc"
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Метод обновления готового\черновика документа и в каталоге
      description: Метод предназначен для обновления в БД данных по имеющейся готового\черновика документа.
      operationId: updateDoc
      tags:
        - Doc
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор готового\черновика документа
          schema:
            type: string
      requestBody:
        required: true
        content:
          'application/json':
            schema:
              $ref: "#/components/schemas/Doc"
      responses:
        '200':
          "description": Подтверждение успешного обновления
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Doc"
        '400':
          "description": Некорректные входные данные. Возвращает список атрибутов с ошибками
          content:
            application/json:
              schema:
                type: array
                items:
                  type: string
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Метод удаления готового\черновика документа по идентификатору
      operationId: deleteDocById
      tags:
        - Doc
      parameters:
        - name: id
          in: path
          required: true
          description: Идентификатор игрушки
          schema:
            type: string
      responses:
        '200':
          "description": Успешное удаление
          content:
            'application/json': {}
        default:
          description: Любая неожиданная ошибка
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"


                
components:
  schemas:
    Template:
      type: object
      required:
        - name
        - owner
      properties:
        id:
          type: string
          example: 1
        name:
          description: Название шаблона
          type: string
          example: Дкп квартиры
        owner:
          description: владелец
          type: string
          example: new
        template:
          description: Путь к шаблону
          type: string
          example: Found on a street
        category_id:
          description: категория шаблона
          type: string
          example: Юр лицо
        modifed:
          type: string
          example: 23.09.2023
        deleted:
          type: boolean
          example: True
          
    Templates:
      type: array
      items:
        $ref: "#/components/schemas/Template"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string

    Doc:
      type: object
      required:
        - name
        - owner
      properties:
        id:
          type: string
          example: 1
        template_id:
          description: Название шаблона
          type: string
          example: Дкп квартиры
        owner:
          description: владелец
          type: string
          example: new
        created:
          type: string
          example: 23.09.2023
        complited:
          type: boolean
          example: True
          
    Docs:
      type: array
      items:
        $ref: "#/components/schemas/Doc"
    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: integer
          format: int32
        message:
          type: string
